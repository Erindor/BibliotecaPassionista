/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.livro;


import controller.LivroController;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import model.Autor;
import model.Livro;
import model.Subarea;
import view.autor.BuscarAutor;
import view.subarea.BuscarSubarea;

/**
 *
 * @author Bruno
 */
public class EditarLivro extends javax.swing.JDialog {

    private Livro livro;
    private Autor autor;
    private Subarea subarea;
    private LivroController livroController = new LivroController();
    int numeroLocacao = -1;

    /**
     * Creates new form EditarAutor
     */
    public EditarLivro(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public EditarLivro(Livro livro) {
        this.livro = livro;
        initComponents();
        setLocationRelativeTo(null);
        this.setCamposLivro(livro);
        getRootPane().setDefaultButton(btn_salvar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_dados = new javax.swing.JPanel();
        label_id = new javax.swing.JLabel();
        input_id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        label_titulo = new javax.swing.JLabel();
        input_titulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        label_autor = new javax.swing.JLabel();
        input_autor = new javax.swing.JTextField();
        btn_buscarAutor = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        input_subarea = new javax.swing.JTextField();
        btn_buscarSubarea = new javax.swing.JButton();
        label_locacao = new javax.swing.JLabel();
        input_locacao = new javax.swing.JTextField();
        btn_gerarLocacao = new javax.swing.JButton();
        panel_icone = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panel_botoes = new javax.swing.JPanel();
        btn_salvar = new javax.swing.JButton();
        btn_voltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar autor");
        setModal(true);

        panel_dados.setBorder(javax.swing.BorderFactory.createTitledBorder("Editar livro"));
        panel_dados.setLayout(new java.awt.GridLayout(5, 3, 0, 10));

        label_id.setText("ID livro:");
        panel_dados.add(label_id);

        input_id.setEnabled(false);
        input_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_idActionPerformed(evt);
            }
        });
        panel_dados.add(input_id);
        panel_dados.add(jLabel2);

        label_titulo.setText("Título do livro:");
        panel_dados.add(label_titulo);
        panel_dados.add(input_titulo);
        panel_dados.add(jLabel3);

        label_autor.setText("Autor do livro:");
        panel_dados.add(label_autor);

        input_autor.setEnabled(false);
        panel_dados.add(input_autor);

        btn_buscarAutor.setText("Buscar autor");
        btn_buscarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarAutorActionPerformed(evt);
            }
        });
        panel_dados.add(btn_buscarAutor);

        jLabel4.setText("Subárea:");
        panel_dados.add(jLabel4);

        input_subarea.setEnabled(false);
        panel_dados.add(input_subarea);

        btn_buscarSubarea.setText("Buscar subárea");
        btn_buscarSubarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarSubareaActionPerformed(evt);
            }
        });
        panel_dados.add(btn_buscarSubarea);

        label_locacao.setText("Classificação:");
        panel_dados.add(label_locacao);

        input_locacao.setEnabled(false);
        input_locacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_locacaoActionPerformed(evt);
            }
        });
        panel_dados.add(input_locacao);

        btn_gerarLocacao.setText("Gerar código de classificação");
        btn_gerarLocacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gerarLocacaoActionPerformed(evt);
            }
        });
        panel_dados.add(btn_gerarLocacao);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/book (1).png"))); // NOI18N
        panel_icone.add(jLabel1);

        panel_botoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });
        panel_botoes.add(btn_salvar);

        btn_voltar.setText("Voltar");
        btn_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltarActionPerformed(evt);
            }
        });
        panel_botoes.add(btn_voltar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_dados, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                    .addComponent(panel_icone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panel_botoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_icone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_dados, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_botoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void input_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_idActionPerformed

    private void btn_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_voltarActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        if(this.validarCampos()){
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja atualizar o livro?", "Confirmação.", JOptionPane.INFORMATION_MESSAGE);
            if (opcao == JOptionPane.YES_OPTION){
                if (this.atualizarLivro() == true){
                    JOptionPane.showMessageDialog(null, "Livro salvo com sucesso!", "Sucesso.", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                }
            }
       }
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void input_locacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_locacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_locacaoActionPerformed

    private void btn_buscarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarAutorActionPerformed
        BuscarAutor buscarAutor = new BuscarAutor();
        buscarAutor.setVisible(true);
        while(buscarAutor.getStatusAtivo()){
            
        }
        this.autor = buscarAutor.getAutor();
        if (this.autor != null){
            this.input_autor.setText(this.autor.getNome_autor());
        }
    }//GEN-LAST:event_btn_buscarAutorActionPerformed

    private void btn_buscarSubareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarSubareaActionPerformed
        BuscarSubarea buscarSubarea = new BuscarSubarea();
        buscarSubarea.setVisible(true);
        while(buscarSubarea.getStatusAtivo()){
        
        }
        this.subarea = buscarSubarea.getSubarea();
        if (this.subarea != null){
            this.input_subarea.setText(this.subarea.getCodigo_subarea() + " - " + this.subarea.getNome_subarea());
            try {
                this.gerarCodigo(subarea.getId_subrea());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao gerar código.", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_buscarSubareaActionPerformed

    private void btn_gerarLocacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gerarLocacaoActionPerformed
        try {
            this.gerarCodigo(subarea.getId_subrea());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao gerar código.", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_gerarLocacaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditarLivro dialog = new EditarLivro(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void setLivro(Livro livro){
        this.livro = livro;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscarAutor;
    private javax.swing.JButton btn_buscarSubarea;
    private javax.swing.JButton btn_gerarLocacao;
    private javax.swing.JButton btn_salvar;
    private javax.swing.JButton btn_voltar;
    private javax.swing.JTextField input_autor;
    private javax.swing.JTextField input_id;
    private javax.swing.JTextField input_locacao;
    private javax.swing.JTextField input_subarea;
    private javax.swing.JTextField input_titulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel label_autor;
    private javax.swing.JLabel label_id;
    private javax.swing.JLabel label_locacao;
    private javax.swing.JLabel label_titulo;
    private javax.swing.JPanel panel_botoes;
    private javax.swing.JPanel panel_dados;
    private javax.swing.JPanel panel_icone;
    // End of variables declaration//GEN-END:variables

    private void setCamposLivro(Livro livro) {
        this.input_id.setText(Integer.toString(livro.getId_livro()));
        this.input_titulo.setText(livro.getTitulo_livro());
        this.input_autor.setText(livro.getAutor().getNome_autor());
        this.input_subarea.setText(livro.getSubarea().getNome_subarea());
        this.input_locacao.setText(livro.getLocacao_livro());
    }

    private boolean validarCampos() {
        try {
            this.validarInputTiulo();
            this.validarInputAutor();
            this.validarSubarea();
            this.validarLocacao();
            return true;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro de validação", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
    }
    
    private boolean validarInputTiulo() throws Exception {
        if (this.input_titulo.getText().isEmpty() == true){
            input_titulo.setBorder(new LineBorder(Color.RED));
            throw new Exception("Título não pode ser vazio!");
        }
        return true;
    }
    
    private boolean validarInputAutor() throws Exception {
        if (this.input_autor.getText().isEmpty() == true){
            input_autor.setBorder(new LineBorder(Color.RED));
            throw new Exception("Autor não pode ser vazio!");
        }
        return true;
    }

    private boolean validarSubarea() throws Exception {
        if (this.input_subarea.getText().isEmpty() == true){
            input_subarea.setBorder(new LineBorder(Color.RED));
            throw new Exception("Subárea não pode ser vazia!");
        }
        return true;
    }

    private boolean validarLocacao() throws Exception {
        if (this.input_locacao.getText().isEmpty() == true){
            input_locacao.setBorder(new LineBorder(Color.RED));
            throw new Exception("Locação não pode ser vazia!");
        }
        
        /*if (livroController.verificarLocacaoExistente(input_locacao.getText()) == true){
            throw new Exception("Locação já cadastrada!");
        }*/
        return true;
    }

    private boolean atualizarLivro() {
        try{
            this.livro.setTitulo_livro(input_titulo.getText());
            this.livro.setLocacao_livro(input_locacao.getText());
            if (this.autor != null)
                this.livro.setAutor(this.autor);
            if (this.subarea != null)                
             this.livro.setSubarea(this.subarea);
            livroController.atualizarLivroNoBanco(this.livro);
            return true;
        } catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Problema ao atualizar o livro!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean gerarCodigo(int idSubarea) throws Exception {
        if (this.input_subarea.getText().isEmpty()){
            throw new Exception("Escolha uma subárea primeiro.");
        }
        this.numeroLocacao = livroController.gerarLocacao(idSubarea);
        if(this.numeroLocacao > 0){
            this.input_locacao.setText(subarea.getCodigo_subarea() + ".0" + Integer.toString(this.numeroLocacao));
        }
        return true;
    }
}
