/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.livro;

import controller.AutorController;
import controller.LivroController;
import controller.SubareaController;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import model.Autor;
import model.Livro;
import model.Subarea;
import view.autor.BuscarAutor;
import view.subarea.BuscarSubarea;

/**
 *
 * @author Bruno
 */
public class CadastrarLivro extends javax.swing.JInternalFrame {
    Autor autor = null;
    Subarea subarea = null;
    int numeroLocacao = -1;
    LivroController livroController = new LivroController();
    /**
     * Creates new form CadastrarAutor
     */
    public CadastrarLivro() {
        initComponents();
        getRootPane().setDefaultButton(btn_confirmar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        panel_principal = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panel_dados = new javax.swing.JPanel();
        label_titulo = new javax.swing.JLabel();
        input_titulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        label_autor = new javax.swing.JLabel();
        input_autor = new javax.swing.JTextField();
        javax.swing.JButton btn_buscar_autor = new javax.swing.JButton();
        label_subarea = new javax.swing.JLabel();
        input_subarea = new javax.swing.JTextField();
        btn_buscar_subarea = new javax.swing.JButton();
        label_locacao = new javax.swing.JLabel();
        input_locacao = new javax.swing.JTextField();
        btn_gerar_locacao = new javax.swing.JButton();
        panel_botoes = new javax.swing.JPanel();
        btn_confirmar = new javax.swing.JButton();
        btn_voltar = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastrar livro");
        setToolTipText("Cadastrar livro");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/book (1).png"))); // NOI18N
        jPanel1.add(jLabel1);

        panel_dados.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastrar livro"));
        panel_dados.setToolTipText("Cadastrar livro");
        panel_dados.setLayout(new java.awt.GridLayout(4, 3, 0, 10));

        label_titulo.setText("Título do livro:");
        panel_dados.add(label_titulo);

        input_titulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_tituloActionPerformed(evt);
            }
        });
        panel_dados.add(input_titulo);
        panel_dados.add(jLabel3);

        label_autor.setText("Autor do livro:");
        panel_dados.add(label_autor);

        input_autor.setEnabled(false);
        panel_dados.add(input_autor);

        btn_buscar_autor.setText("Buscar autor");
        btn_buscar_autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_autorActionPerformed(evt);
            }
        });
        panel_dados.add(btn_buscar_autor);

        label_subarea.setText("Subárea:");
        panel_dados.add(label_subarea);

        input_subarea.setEnabled(false);
        panel_dados.add(input_subarea);

        btn_buscar_subarea.setText("Buscar subárea");
        btn_buscar_subarea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_subareaActionPerformed(evt);
            }
        });
        panel_dados.add(btn_buscar_subarea);

        label_locacao.setText("Classificação:");
        panel_dados.add(label_locacao);

        input_locacao.setEnabled(false);
        input_locacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_locacaoActionPerformed(evt);
            }
        });
        panel_dados.add(input_locacao);

        btn_gerar_locacao.setText("Gerar código de classificação");
        btn_gerar_locacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gerar_locacaoActionPerformed(evt);
            }
        });
        panel_dados.add(btn_gerar_locacao);

        panel_botoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 10, 5);
        flowLayout1.setAlignOnBaseline(true);
        panel_botoes.setLayout(flowLayout1);

        btn_confirmar.setText("Confirmar");
        btn_confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmarActionPerformed(evt);
            }
        });
        panel_botoes.add(btn_confirmar);

        btn_voltar.setText("Voltar");
        btn_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_voltarActionPerformed(evt);
            }
        });
        panel_botoes.add(btn_voltar);

        javax.swing.GroupLayout panel_principalLayout = new javax.swing.GroupLayout(panel_principal);
        panel_principal.setLayout(panel_principalLayout);
        panel_principalLayout.setHorizontalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel_botoes, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                    .addComponent(panel_dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        panel_principalLayout.setVerticalGroup(
            panel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_botoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_principal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void input_tituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_tituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_tituloActionPerformed

    private void input_locacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_locacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_locacaoActionPerformed

    private void btn_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_voltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_voltarActionPerformed

    private void btn_confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmarActionPerformed
       if(this.validarCampos()){
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja salvar novo livro?", "Confirmação.", JOptionPane.INFORMATION_MESSAGE);
            if (opcao == JOptionPane.YES_OPTION){
                if (this.salvarLivro() == true){
                    JOptionPane.showMessageDialog(null, "Livro salvo com sucesso!", "Sucesso.", JOptionPane.INFORMATION_MESSAGE);
                    this.dispose();
                }
            }
       }
    }//GEN-LAST:event_btn_confirmarActionPerformed

    private void btn_buscar_autorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_autorActionPerformed
        BuscarAutor buscarAutor = new BuscarAutor();
        buscarAutor.setVisible(true);
        while(buscarAutor.getStatusAtivo()){
            
        }
        this.autor = buscarAutor.getAutor();
        if (this.autor != null){
            this.input_autor.setText(this.autor.getNome_autor());
        }
    }//GEN-LAST:event_btn_buscar_autorActionPerformed

    private void btn_buscar_subareaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_subareaActionPerformed
        BuscarSubarea buscarSubarea = new BuscarSubarea();
        buscarSubarea.setVisible(true);
        while(buscarSubarea.getStatusAtivo()){
        
        }
        this.subarea = buscarSubarea.getSubarea();
        if (this.subarea != null){
            this.input_subarea.setText(this.subarea.getCodigo_subarea() + " - " + this.subarea.getNome_subarea());
            try {
                this.gerarCodigo(subarea.getId_subrea());
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao gerar código.", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_buscar_subareaActionPerformed

    private void btn_gerar_locacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gerar_locacaoActionPerformed
        try {
            this.gerarCodigo(subarea.getId_subrea());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao gerar código.", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_gerar_locacaoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar_subarea;
    private javax.swing.JButton btn_confirmar;
    private javax.swing.JButton btn_gerar_locacao;
    private javax.swing.JButton btn_voltar;
    private javax.swing.JTextField input_autor;
    private javax.swing.JTextField input_locacao;
    private javax.swing.JTextField input_subarea;
    private javax.swing.JTextField input_titulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel label_autor;
    private javax.swing.JLabel label_locacao;
    private javax.swing.JLabel label_subarea;
    private javax.swing.JLabel label_titulo;
    private javax.swing.JPanel panel_botoes;
    private javax.swing.JPanel panel_dados;
    private javax.swing.JPanel panel_principal;
    // End of variables declaration//GEN-END:variables

    private boolean validarCampos() {
        try {
            this.validarInputTiulo();
            this.validarInputAutor();
            this.validarSubarea();
            this.validarLocacao();
            return true;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro de validação", JOptionPane.INFORMATION_MESSAGE);
            return false;
        }
    }

    private boolean validarInputTiulo() throws Exception {
        if (this.input_titulo.getText().isEmpty() == true){
            input_titulo.setBorder(new LineBorder(Color.RED));
            throw new Exception("Título não pode ser vazio!");
        }
        return true;
    }
    
    private boolean validarInputAutor() throws Exception {
        if (this.input_autor.getText().isEmpty() == true){
            input_autor.setBorder(new LineBorder(Color.RED));
            throw new Exception("Autor não pode ser vazio!");
        }
        return true;
    }

    private boolean validarSubarea() throws Exception {
        if (this.input_subarea.getText().isEmpty() == true){
            input_subarea.setBorder(new LineBorder(Color.RED));
            throw new Exception("Subárea não pode ser vazia!");
        }
        return true;
    }

    private boolean validarLocacao() throws Exception {
        if (this.input_locacao.getText().isEmpty() == true){
            input_locacao.setBorder(new LineBorder(Color.RED));
            throw new Exception("Locação não pode ser vazia!");
        }
        
        if (livroController.verificarLocacaoExistente(input_locacao.getText()) == true){
            throw new Exception("Locação já cadastrada!");
        }
        return true;
    }

    private boolean salvarLivro() {
        Livro livro = new Livro(input_titulo.getText(), input_locacao.getText(), this.numeroLocacao, this.subarea, this.autor);
        return livroController.salvarLivro(livro); 
    }

    private boolean gerarCodigo(int idSubarea) throws Exception {
        if (this.input_subarea.getText().isEmpty()){
            throw new Exception("Escolha uma subárea primeiro.");
        }
        this.numeroLocacao = livroController.gerarLocacao(idSubarea);
        if(this.numeroLocacao > 0){
            this.input_locacao.setText(subarea.getCodigo_subarea() + "0" + Integer.toString(this.numeroLocacao));
        }
        return true;
    }
}
