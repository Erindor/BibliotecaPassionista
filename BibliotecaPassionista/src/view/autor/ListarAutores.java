/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.autor;

import controller.AutorController;
import controller.SubareaController;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Autor;
import model.Subarea;

/**
 *
 * @author Bruno
 */
public class ListarAutores extends javax.swing.JInternalFrame {

    private AutorController autorController = new AutorController();
    DefaultTableModel dtm;
    private int qtdRegistros = 50;
    private int nPagina = 1;
    
    public ListarAutores() {
        initComponents();
        getRootPane().setDefaultButton(btn_pesquisar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        panel_pesquisa = new javax.swing.JPanel();
        label_pesquisar_nome = new javax.swing.JLabel();
        input_pesquisar = new javax.swing.JTextField();
        btn_pesquisar = new javax.swing.JButton();
        panel_tabela = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_autores = new javax.swing.JTable();
        panel_paginacao = new javax.swing.JPanel();
        label_voltarPagina = new javax.swing.JLabel();
        label_nPagina = new javax.swing.JLabel();
        label_proximaPagina = new javax.swing.JLabel();
        panel_ferramentas = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        label_total = new javax.swing.JLabel();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pesquisar autor");

        panel_pesquisa.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel_pesquisa.setLayout(new javax.swing.BoxLayout(panel_pesquisa, javax.swing.BoxLayout.LINE_AXIS));

        label_pesquisar_nome.setText("Nome do autor:");
        panel_pesquisa.add(label_pesquisar_nome);

        input_pesquisar.setPreferredSize(new java.awt.Dimension(400, 20));
        panel_pesquisa.add(input_pesquisar);

        btn_pesquisar.setText("Pesquisar");
        btn_pesquisar.setToolTipText("");
        btn_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisarActionPerformed(evt);
            }
        });
        panel_pesquisa.add(btn_pesquisar);

        panel_tabela.setBorder(javax.swing.BorderFactory.createTitledBorder("Autores encontrados"));

        table_autores.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        table_autores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Email", "Site", "Objeto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_autores.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table_autores);
        if (table_autores.getColumnModel().getColumnCount() > 0) {
            table_autores.getColumnModel().getColumn(0).setMinWidth(70);
            table_autores.getColumnModel().getColumn(0).setPreferredWidth(70);
            table_autores.getColumnModel().getColumn(0).setMaxWidth(150);
            table_autores.getColumnModel().getColumn(4).setMinWidth(0);
            table_autores.getColumnModel().getColumn(4).setPreferredWidth(0);
            table_autores.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        javax.swing.GroupLayout panel_tabelaLayout = new javax.swing.GroupLayout(panel_tabela);
        panel_tabela.setLayout(panel_tabelaLayout);
        panel_tabelaLayout.setHorizontalGroup(
            panel_tabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );
        panel_tabelaLayout.setVerticalGroup(
            panel_tabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        panel_paginacao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panel_paginacao.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        label_voltarPagina.setForeground(new java.awt.Color(0, 0, 204));
        label_voltarPagina.setText("<< Voltar");
        label_voltarPagina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_voltarPaginaMouseClicked(evt);
            }
        });
        panel_paginacao.add(label_voltarPagina);

        label_nPagina.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_nPagina.setText("1");
        panel_paginacao.add(label_nPagina);

        label_proximaPagina.setForeground(new java.awt.Color(0, 0, 204));
        label_proximaPagina.setText("Próxima>>");
        label_proximaPagina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_proximaPaginaMouseClicked(evt);
            }
        });
        panel_paginacao.add(label_proximaPagina);

        java.awt.GridBagLayout panel_ferramentasLayout = new java.awt.GridBagLayout();
        panel_ferramentasLayout.rowHeights = new int[] {50};
        panel_ferramentas.setLayout(panel_ferramentasLayout);

        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/img/edit.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });
        panel_ferramentas.add(btn_editar, new java.awt.GridBagConstraints());

        btn_excluir.setIcon(new javax.swing.ImageIcon("C:\\Users\\Bruno\\Pictures\\delete.png")); // NOI18N
        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        panel_ferramentas.add(btn_excluir, gridBagConstraints);

        label_total.setText("Total listado:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_pesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel_paginacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panel_tabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel_ferramentas, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label_total))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panel_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_tabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panel_ferramentas, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_total)
                        .addGap(0, 245, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_paginacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisarActionPerformed
        List<Autor> autoresEncontrados;
        try {
            this.nPagina = 1;
            autoresEncontrados = this.buscarAutor(input_pesquisar.getText(), this.nPagina, this.qtdRegistros);
            this.label_nPagina.setText(Integer.toString(this.nPagina));
            this.montarTabela(autoresEncontrados);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Nenhum autor encontrado com esse nome.", "Autor não encontrado.", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_pesquisarActionPerformed

    private void label_proximaPaginaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_proximaPaginaMouseClicked
        List<Autor> autoresEncontrados;
        try {            
            autoresEncontrados = this.buscarAutor(input_pesquisar.getText(), this.nPagina + 1, this.qtdRegistros);
            this.nPagina = Integer.parseInt(label_nPagina.getText()) + 1;
            this.label_nPagina.setText(Integer.toString(this.nPagina));
            this.montarTabela(autoresEncontrados);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Nenhum autor encontrado.", "Autor não encontrado.", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_label_proximaPaginaMouseClicked

    private void label_voltarPaginaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_voltarPaginaMouseClicked
        List<Autor> autoresEncontrados;
        try {            
            autoresEncontrados = this.buscarAutor(input_pesquisar.getText(), this.nPagina - 1, this.qtdRegistros);
            this.nPagina = Integer.parseInt(label_nPagina.getText()) - 1;
            this.label_nPagina.setText(Integer.toString(this.nPagina));
            this.montarTabela(autoresEncontrados);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Nenhum autor encontrado.", "Autor não encontrado.", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_label_voltarPaginaMouseClicked

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        List<Autor> autoresDeletar = this.autoresSelecionadosParaExcluir();
        if (autoresDeletar != null){
            int opcao = JOptionPane.showConfirmDialog(null, "Realmente deseja exluir " + autoresDeletar.size() + " autor(es)?");
            if (opcao == JOptionPane.YES_OPTION){            
                if (autoresDeletar.size() > 0){
                    try {
                        for (int i = 0; i < autoresDeletar.size(); i++){
                            if(autorController.excluirAutor(autoresDeletar.get(i))){
                                this.dtm.removeRow(table_autores.getSelectedRow());
                            }
                        }
                        JOptionPane.showMessageDialog(null, "Autor(es) deletado(s) com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro.", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_excluirActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        Autor autor = this.autorSelecionadoParaEditar();
        if (autor != null){
            autorController.editarAutor(autor);
        }
    }//GEN-LAST:event_btn_editarActionPerformed
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_pesquisar;
    private javax.swing.JTextField input_pesquisar;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_nPagina;
    private javax.swing.JLabel label_pesquisar_nome;
    private javax.swing.JLabel label_proximaPagina;
    private javax.swing.JLabel label_total;
    private javax.swing.JLabel label_voltarPagina;
    private javax.swing.JPanel panel_ferramentas;
    private javax.swing.JPanel panel_paginacao;
    private javax.swing.JPanel panel_pesquisa;
    private javax.swing.JPanel panel_tabela;
    private javax.swing.JTable table_autores;
    // End of variables declaration//GEN-END:variables

    private List<Autor> buscarAutor(String nome, int nPagina, int qtdRegistros) throws Exception{  
        this.totalListadoPorNome(nome);
        return autorController.recuperarAutores(nome, nPagina, qtdRegistros);
    }
    
    private void montarTabela(List<Autor> autoresEncontrados) {
        this.dtm = (DefaultTableModel) table_autores.getModel();
        this.limparTabela(dtm);
        for (Autor a : autoresEncontrados){
            this.dtm.addRow(new Object[]{a.getId_autor(), a.getNome_autor(), a.getEmail_autor(),
                a.getSite_autor(), a});
        }
    }

    private void limparTabela(DefaultTableModel dtm) {
        while (dtm.getRowCount() > 0){
            dtm.removeRow(0);
        }
    }
    
    private Autor autorSelecionadoParaEditar(){
        try{
            Autor autorSelecionado = (Autor)table_autores.getValueAt(table_autores.getSelectedRow(), 4);
            if (autorSelecionado == null){
                throw new Exception();
            }
            return autorSelecionado;
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Nenhum autor selecionado!", "Erro.", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }
    }
    
    private List<Autor> autoresSelecionadosParaExcluir(){
        try{            
            int qtdAutoresSelecionados[] = table_autores.getSelectedRows();
            if (qtdAutoresSelecionados.length > 0){
                List<Autor> autoresSelecionados = new ArrayList<Autor>();
                for (int i = 0; i < qtdAutoresSelecionados.length; i++){
                    Autor autorSelecionado = (Autor)table_autores.getValueAt(qtdAutoresSelecionados[i], 4);
                    autoresSelecionados.add(autorSelecionado);
                }
                return autoresSelecionados;
            } else{
                throw new Exception();
            }     
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, "Nenhum autor selecionado!", "Erro.", JOptionPane.INFORMATION_MESSAGE);
        }
        return null;
    }
    
    private void totalListadoPorNome(String texto){
        this.label_total.setText("Total listado: " + Integer.toString(autorController.totalListadoNome(texto)));
    }
}
